Attaching SeuratObject
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
13:40:25 UMAP embedding parameters a = 0.9922 b = 1.112
13:40:25 Read 7051 rows and found 50 numeric columns
13:40:25 Using Annoy for neighbor search, n_neighbors = 30
13:40:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:40:26 Writing NN index file to temp file /storage/chen/tmp//RtmpOfRbZB/file206cc75bd83d5
13:40:26 Searching Annoy index using 1 thread, search_k = 3000
13:40:27 Annoy recall = 100%
13:40:50 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:40:58 Initializing from normalized Laplacian + noise (using irlba)
13:40:59 Commencing optimization for 500 epochs, with 306028 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:41:24 Optimization finished
Performing TF-IDF normalization
Warning message:
In RunTFIDF.default(object = GetAssayData(object = object, slot = "counts"),  :
  Some features contain 0 total counts
Running SVD
Scaling cell embeddings
13:43:58 UMAP embedding parameters a = 0.9922 b = 1.112
13:43:58 Read 7051 rows and found 49 numeric columns
13:43:58 Using Annoy for neighbor search, n_neighbors = 30
13:43:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:43:59 Writing NN index file to temp file /storage/chen/tmp//RtmpOfRbZB/file206cc66427f2f
13:43:59 Searching Annoy index using 1 thread, search_k = 3000
13:44:02 Annoy recall = 100%
13:44:04 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:44:07 Initializing from normalized Laplacian + noise (using irlba)
13:44:07 Commencing optimization for 500 epochs, with 306936 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:44:45 Optimization finished
Calculating cell-specific modality weights
Finding 50 nearest neighbors for each modality.
Calculating kernel bandwidths
Finding multimodal neighbors
Constructing multimodal KNN graph
Constructing multimodal SNN graph
13:45:21 UMAP embedding parameters a = 0.9922 b = 1.112
13:45:23 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 50
13:45:25 Initializing from normalized Laplacian + noise (using irlba)
13:45:26 Commencing optimization for 500 epochs, with 508790 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:46:07 Optimization finished
