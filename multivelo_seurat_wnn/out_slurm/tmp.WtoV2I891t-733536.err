Attaching SeuratObject
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
14:13:50 UMAP embedding parameters a = 0.9922 b = 1.112
14:13:50 Read 20000 rows and found 50 numeric columns
14:13:50 Using Annoy for neighbor search, n_neighbors = 30
14:13:50 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:13:54 Writing NN index file to temp file /storage/chen/tmp//Rtmp69MMMw/file27df6785f90a4
14:13:55 Searching Annoy index using 1 thread, search_k = 3000
14:14:00 Annoy recall = 100%
14:14:14 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
14:14:16 Initializing from normalized Laplacian + noise (using irlba)
14:14:22 Commencing optimization for 200 epochs, with 840324 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:14:45 Optimization finished
Performing TF-IDF normalization
Warning message:
In RunTFIDF.default(object = GetAssayData(object = object, slot = "counts"),  :
  Some features contain 0 total counts
Running SVD
Scaling cell embeddings
14:20:38 UMAP embedding parameters a = 0.9922 b = 1.112
14:20:38 Read 20000 rows and found 49 numeric columns
14:20:38 Using Annoy for neighbor search, n_neighbors = 30
14:20:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:20:41 Writing NN index file to temp file /storage/chen/tmp//Rtmp69MMMw/file27df6d40bf35
14:20:41 Searching Annoy index using 1 thread, search_k = 3000
14:20:51 Annoy recall = 100%
14:20:54 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
14:20:56 Initializing from normalized Laplacian + noise (using irlba)
14:20:58 Commencing optimization for 200 epochs, with 829634 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:21:26 Optimization finished
Calculating cell-specific modality weights
Finding 50 nearest neighbors for each modality.
Calculating kernel bandwidths
Finding multimodal neighbors
Constructing multimodal KNN graph
Constructing multimodal SNN graph
14:22:47 UMAP embedding parameters a = 0.9922 b = 1.112
14:22:49 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 50
14:22:51 Initializing from normalized Laplacian + noise (using irlba)
14:22:54 Commencing optimization for 200 epochs, with 1453018 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:23:36 Optimization finished
