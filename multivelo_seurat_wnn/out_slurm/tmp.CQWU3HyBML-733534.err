Attaching SeuratObject
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
14:03:22 UMAP embedding parameters a = 0.9922 b = 1.112
14:03:22 Read 17518 rows and found 50 numeric columns
14:03:22 Using Annoy for neighbor search, n_neighbors = 30
14:03:22 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:03:25 Writing NN index file to temp file /storage/chen/tmp//RtmpEHY5mI/file256ab2bbe8ead
14:03:25 Searching Annoy index using 1 thread, search_k = 3000
14:03:29 Annoy recall = 100%
14:03:44 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
14:03:46 Initializing from normalized Laplacian + noise (using irlba)
14:03:50 Commencing optimization for 200 epochs, with 738740 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:04:11 Optimization finished
Performing TF-IDF normalization
Warning message:
In RunTFIDF.default(object = GetAssayData(object = object, slot = "counts"),  :
  Some features contain 0 total counts
Running SVD
Scaling cell embeddings
14:07:49 UMAP embedding parameters a = 0.9922 b = 1.112
14:07:49 Read 17518 rows and found 49 numeric columns
14:07:49 Using Annoy for neighbor search, n_neighbors = 30
14:07:49 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:07:51 Writing NN index file to temp file /storage/chen/tmp//RtmpEHY5mI/file256ab2c580aab
14:07:51 Searching Annoy index using 1 thread, search_k = 3000
14:07:58 Annoy recall = 100%
14:08:00 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
14:08:02 Initializing from normalized Laplacian + noise (using irlba)
14:08:03 Commencing optimization for 200 epochs, with 712168 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:08:25 Optimization finished
Calculating cell-specific modality weights
Finding 50 nearest neighbors for each modality.
Calculating kernel bandwidths
Finding multimodal neighbors
Constructing multimodal KNN graph
Constructing multimodal SNN graph
14:09:31 UMAP embedding parameters a = 0.9922 b = 1.112
14:09:33 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 50
14:09:38 Initializing from normalized Laplacian + noise (using irlba)
14:09:40 Commencing optimization for 200 epochs, with 1254116 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
14:10:10 Optimization finished
