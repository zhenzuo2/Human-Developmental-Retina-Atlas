Attaching SeuratObject
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
13:41:38 UMAP embedding parameters a = 0.9922 b = 1.112
13:41:38 Read 26567 rows and found 50 numeric columns
13:41:38 Using Annoy for neighbor search, n_neighbors = 30
13:41:38 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:41:52 Writing NN index file to temp file /storage/chen/tmp//RtmpXUSW5A/file206cd47ef72cf
13:41:52 Searching Annoy index using 1 thread, search_k = 3000
13:42:11 Annoy recall = 100%
13:42:49 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:42:53 Initializing from normalized Laplacian + noise (using irlba)
13:43:05 Commencing optimization for 200 epochs, with 1179446 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:44:04 Optimization finished
Performing TF-IDF normalization
Warning message:
In RunTFIDF.default(object = GetAssayData(object = object, slot = "counts"),  :
  Some features contain 0 total counts
Running SVD
Scaling cell embeddings
13:49:10 UMAP embedding parameters a = 0.9922 b = 1.112
13:49:10 Read 26567 rows and found 49 numeric columns
13:49:10 Using Annoy for neighbor search, n_neighbors = 30
13:49:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:49:13 Writing NN index file to temp file /storage/chen/tmp//RtmpXUSW5A/file206cd34057ccc
13:49:13 Searching Annoy index using 1 thread, search_k = 3000
13:49:23 Annoy recall = 100%
13:49:27 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:49:30 Initializing from normalized Laplacian + noise (using irlba)
13:49:31 Commencing optimization for 200 epochs, with 1094746 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:50:06 Optimization finished
Calculating cell-specific modality weights
Finding 50 nearest neighbors for each modality.
Calculating kernel bandwidths
Finding multimodal neighbors
Constructing multimodal KNN graph
Constructing multimodal SNN graph
13:52:04 UMAP embedding parameters a = 0.9922 b = 1.112
13:52:05 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 50
13:52:08 Initializing from normalized Laplacian + noise (using irlba)
13:52:15 Commencing optimization for 200 epochs, with 2021948 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:53:03 Optimization finished
