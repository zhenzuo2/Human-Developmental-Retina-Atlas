Attaching SeuratObject
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
13:40:48 UMAP embedding parameters a = 0.9922 b = 1.112
13:40:48 Read 8043 rows and found 50 numeric columns
13:40:48 Using Annoy for neighbor search, n_neighbors = 30
13:40:48 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:40:49 Writing NN index file to temp file /storage/chen/tmp//RtmpCOEMgC/file206ce27de3b79
13:40:49 Searching Annoy index using 1 thread, search_k = 3000
13:40:56 Annoy recall = 100%
13:41:16 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:41:17 Initializing from normalized Laplacian + noise (using irlba)
13:41:19 Commencing optimization for 500 epochs, with 343906 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:42:01 Optimization finished
Performing TF-IDF normalization
Warning message:
In RunTFIDF.default(object = GetAssayData(object = object, slot = "counts"),  :
  Some features contain 0 total counts
Running SVD
Scaling cell embeddings
13:45:06 UMAP embedding parameters a = 0.9922 b = 1.112
13:45:06 Read 8043 rows and found 49 numeric columns
13:45:06 Using Annoy for neighbor search, n_neighbors = 30
13:45:06 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:45:07 Writing NN index file to temp file /storage/chen/tmp//RtmpCOEMgC/file206ce5837ce61
13:45:07 Searching Annoy index using 1 thread, search_k = 3000
13:45:10 Annoy recall = 100%
13:45:13 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
13:45:16 Initializing from normalized Laplacian + noise (using irlba)
13:45:16 Commencing optimization for 500 epochs, with 348560 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:45:53 Optimization finished
Calculating cell-specific modality weights
Finding 50 nearest neighbors for each modality.
Calculating kernel bandwidths
Finding multimodal neighbors
Constructing multimodal KNN graph
Constructing multimodal SNN graph
13:46:32 UMAP embedding parameters a = 0.9922 b = 1.112
13:46:34 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 50
13:46:36 Initializing from normalized Laplacian + noise (using irlba)
13:46:38 Commencing optimization for 500 epochs, with 578042 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
13:47:28 Optimization finished
