import pandas as pd

meta = pd.read_csv(
    "/storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/QC_seurat/meta.csv"
)
samples = meta["Samples_ID"].tolist()
sample2file = dict(zip(meta["Samples_ID"].tolist(), meta["Samples"].tolist()))
labels = ["fetal", "fetal_adult"]
cell_type = ["AC", "BC", "Cone", "HC", "MG", "RGC", "Rod"]


def get_rawh5(wildcards):
    return sample2file[wildcards.sample]


rule all:
    ## Put input file here to run corresponding rules
    input:
        directory(
            "/storage/singlecell/zz4/fetal_snakemake/results/cell_annotation_results/subclass_annotation/AC_annotation_adult/"
        ),

####################################################################################################
# Annotation
rule QC_seurat:
    ## Seurat QC
    input:
        get_rawh5,
    output:
        result="/storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object/{sample}.rds",
        figure="/storage/singlecell/zz4/fetal_snakemake/figures/after_qc_seurat_object/{sample}_seurat_QC.svg",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate r
        Rscript /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/QC_seurat/QC_seurat.R {wildcards.sample} {input} 200 10 /storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object/ /storage/singlecell/zz4/fetal_snakemake/figures/after_qc_seurat_object/'
        """


rule QC_seurat_apply_filter:
    ## Apply QC cutoff to get a subset of cells
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object/{sample}.rds",
    output:
        result="/storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object_apply_filter/{sample}.rds",
        figure="/storage/singlecell/zz4/fetal_snakemake/figures/after_qc_seurat_object_apply_filter/{sample}_after_filtered_seurat_QC.svg",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate r
        Rscript /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/QC_seurat_apply_filter/QC_seurat_apply_filter.R {wildcards.sample} {input} /storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object_apply_filter/ /storage/singlecell/zz4/fetal_snakemake/figures/after_qc_seurat_object_apply_filter/'
        """


rule DoubletFinder:
    ## Run DoubletFinder
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/after_qc_seurat_object_apply_filter/{sample}.rds",
    output:
        result="/storage/singlecell/zz4/fetal_snakemake/results/DoubletFinder_seurat_object/{sample}.rds",
        figure="/storage/singlecell/zz4/fetal_snakemake/figures/DoubletFinder_UMAP/{sample}.svg",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate r
        Rscript /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/DoubletFinder/DoubletFinder.R {wildcards.sample} {input} /storage/singlecell/zz4/fetal_snakemake/results/DoubletFinder_seurat_object/ /storage/singlecell/zz4/fetal_snakemake/figures/DoubletFinder_UMAP/'
        """


rule DoubletFinder_save_filtered_cells:
    ## Export DoubletFinder results to a csv file
    input:
        expand(
            [
                "/storage/singlecell/zz4/fetal_snakemake/results/DoubletFinder_seurat_object/{sample}.rds",
            ],
            sample=samples,
        ),
    output:
        "/storage/singlecell/zz4/fetal_snakemake/results/DoubletFinder_filtered_cells/DoubletFinder_filtered_cells.csv",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate r
        Rscript /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/DoubletFinder_save_filtered_cells/DoubletFinder_save_filtered_cells.R'
        """


rule merge_feature_bc_matrix_to_h5ad:
    ## Merge all samples and save as anndata object, save the object and filtered object
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/DoubletFinder_filtered_cells/DoubletFinder_filtered_cells.csv",
    output:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw.h5ad",
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered.h5ad",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate python
        python3.9 /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/merge_feature_bc_matrix_to_h5ad/merge_feature_bc_matrix_to_h5ad.py'
        """


rule major_class_annotation:
    ## Merge all samples and save as anndata object, save the object and filtered object
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered.h5ad",
    output:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered_wadult_umap_10000.h5ad",
        "/storage/singlecell/zz4/fetal_snakemake/results/cell_annotation_results/filtered_major_class.csv",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate python
        python3.9 /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/major_class_annotation/major_class_annotation.py'
        """


rule filter_run_UMAP_to_annotate_MG:
    ## Run scvi umap to annotate mg cells. Filter cells based on ATAC and RNA seq
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/cell_annotation_results/filtered_major_class.csv",
        "/storage/singlecell/zz4/fetal_snakemake/results/ATAC_filtered_cells/ATAC_Filtered_cell.csv",
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw.h5ad",
    output:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered_umap_10000_wadult.h5ad",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate python
        python3.9 /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/run_UMAP_to_annotate_MG/run_UMAP_to_annotate_MG.py'
        """


rule annotate_MG_RPC:
    ## Manually annotation. Annotate MG, PRPC, and NRPC. Clean.
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered_umap_10000_wadult.h5ad",
    output:
        "/storage/singlecell/zz4/fetal_snakemake/results/cell_annotation_results/filtered_major_class_MG.csv",
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered_umap_10000_wadult_MG.h5ad",
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate python
        python3.9 /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/annotate_MG_RPC/annotate_MG_RPC.py'
        """


rule subclass_annotation_with_adult:
    ## Manually annotation. Annotate MG, PRPC, and NRPC. Clean.
    input:
        "/storage/singlecell/zz4/fetal_snakemake/results/merged_h5ad/merged_raw_filtered_umap_10000_wadult_MG.h5ad",
    output:
        directory(
            "/storage/singlecell/zz4/fetal_snakemake/results/cell_annotation_results/subclass_annotation/AC_annotation_adult/"
        ),
    shell:
        """
        bash -c '
        source /storage/singlecell/zz4/mambaforge/etc/profile.d/conda.sh && conda activate python
        sh /storage/singlecell/zz4/fetal_snakemake/scripts/Annotation/subclass_annotation_with_adult/subclass_annotation_with_adult.sh'
        """
